===== Testing compilation and error messages =====
Test 1: compute_hash with no arguments should print usage message
part1 T1: passed

Test 2: compute_hash with one argument less than 0 should print error message
part1 T2: passed

Test 3: compute_hash with one argument greater than MAX_BLOCK_SIZE should print error message
part1 T3: passed

Test 4: redefining MAX_BLOCK_SIZE: error message should include new value
part1 T4: passed

Test 5: compute_hash with more than 2 arguments should print error message
part1 T5: passed

Test 6: Checking for the existence of string manipulation functions
T6: passed

Test 7: Checking for incorrect include statements:
T7: passed


===== Testing hash computation =====
Test1: block_size = 6, Input is 6 bytes of value zero
       expecting all zeros in hash
       Computed: 00 00 00 00 00 00 
       Expected: 00 00 00 00 00 00 
test_hash T01: passed

Test2: block_size = 6, Input is 6 bytes with all one values
       expecting all ones (ff) in hash
       Computed: ff ff ff ff ff ff 
       Expected: ff ff ff ff ff ff 
test_hash T02: passed

Test3: block_size = 6, Input is 12 bytes with all one values
       expecting all zeros in hash
       Computed: 00 00 00 00 00 00 
       Expected: 00 00 00 00 00 00 
test_hash T03: passed

Test4: block_size = 6, Input is 9 bytes with all one values
       expecting half zeros and half ones in hash
       Computed: 00 00 00 ff ff ff 
       Expected: 00 00 00 ff ff ff 
test_hash T04: passed

Test5: block_size = 8, Input is from file small_no_newline
       Computed: 00 00 00 00 08 08 08 08 
       Expected: 00 00 00 00 08 08 08 08 
test_hash T05: passed

Test6: block_size = 8, Input is from file small_with_newline
       Computed: 0a 00 00 00 08 08 08 08 
       Expected: 0a 00 00 00 08 08 08 08 
test_hash T06: passed

Test7: block_size = 4, Input is from file small_no_newline
       Computed: 08 08 08 08 
       Expected: 08 08 08 08 
test_hash T07: passed

Test8: block_size = 16, Input is from file small_no_newline
       Computed: 04 04 04 04 04 04 04 04 04 04 04 04 0c 0c 0c 0c 
       Expected: 04 04 04 04 04 04 04 04 04 04 04 04 0c 0c 0c 0c 
test_hash T08: passed

Test9: block_size = 3, Input is from file small_no_newline
       Computed: 6a 67 0d 
       Expected: 6a 67 0d 
test_hash T09: passed

Test10: block_size = 1024, Input is from file a_tale_of_two_cities.txt
       Computed: 38 22 8b 3d 69 37 ba cf 4c d3 65 1d ae f9 c7 c8 81 a8 d2 d4 bf e5 e8 22 2a bc e2 73 6f 70 40 91 64 38 53 f0 75 ec 0d 6d 89 2c 0b 0a 2c fa 1c 19 86 d6 3c c4 96 10 97 63 51 9f 22 2d 66 38 7c 24 2f 77 1b 96 58 db 0a ea 5f 2b f7 b9 e7 06 b2 b9 fc c8 35 56 f3 67 77 98 e4 4a bb 17 ae 6a 48 3b e2 1d a9 24 37 76 cb ea 8f 0d 57 58 ab 4f 67 c3 82 57 aa cd f7 0e 51 cd 2e 4e 9b ac 4a 86 5b ae 26 3c cc 78 ca 7f 81 48 11 fc 26 a5 c4 eb b8 4d 7b 9a 41 5b 7f 6f 01 b5 54 3d d9 be 42 30 46 fd 58 47 1a d6 a4 46 f8 f0 23 70 d4 e7 07 0f 5a ab 6b 4d ec 05 f1 c8 e5 cf 3b c8 28 95 57 19 b5 5c 6c 2f a4 2f a9 c6 3f db d6 eb cf 57 dc 24 93 1a 94 2d e4 21 ac cf 64 03 40 01 d6 95 a5 9a 6e f0 6d 12 48 35 89 e9 a8 4d e4 2a c0 cd fc cd 02 32 f2 b6 d5 2a f3 00 c7 1f 1b e6 6f f6 93 70 ad 18 53 d9 2f eb d0 5e 50 a0 ba 2f ad 3a af 16 60 e8 26 ca 06 d0 0a a6 c8 31 8a 68 3f 33 46 e1 11 c8 4c 32 7d 6e d9 5d e9 b4 ba fd 1f 10 f3 1f 1b 0a 1d d7 77 09 92 76 df ea 46 b6 a4 36 f0 c0 9d b6 66 b8 3f d4 f3 6f 9b 32 a4 56 e3 97 de 4d 29 4c 21 31 d9 45 24 ab dc 55 cc 21 84 9d 57 70 10 d5 50 6f 2e 7f 1e 71 10 d5 c0 54 31 9d ec f5 e3 ab 7f 3c f0 de 1b 40 61 13 8d fc 04 b9 5b 2d 63 62 c6 41 41 ba 3a 71 0b 03 45 fa 65 9c cf 04 8e e1 01 9f 01 c6 98 4e 65 00 c6 bc fb c9 4b 0e 99 2e 1c 64 98 70 1b ad 09 ca 87 22 60 84 1d 10 4b c4 e6 ad 00 e3 f6 20 c3 6b e9 a2 15 ff 80 27 5d 9c a5 22 3f 37 23 cb ad e2 61 f3 7d ab 3e 5c ce b7 08 16 01 37 b7 f6 4d 1e 77 21 05 41 b2 ad 7d 43 1e 3b c9 aa 4a c0 e6 73 21 d0 a9 07 8a ba 2d ec c2 2a c9 f4 be 5a 25 13 28 76 4d e5 be 16 57 f0 cf f4 47 cb 60 a1 85 b6 07 40 6a 93 ad a7 c6 b3 5e 90 13 f5 87 f9 17 27 3b b0 c0 2a 7f cc f3 2b bf c7 01 67 53 9f 9a b8 54 b8 b5 40 92 ed 63 df ae c0 f3 50 97 09 c2 bc e4 d0 85 83 4a e1 7c a1 ed 1c 12 5a ac 47 53 81 70 af 1c 04 31 08 b9 1d e7 6a dc aa b2 1d 52 81 87 ae b0 a0 37 2b ed 33 09 8c 00 ad fe 3a 61 31 00 68 f1 4d fc 00 f4 e7 37 54 39 23 77 a1 1d a3 a6 d1 a8 48 38 fc 75 a1 52 b1 9a 73 c9 28 a1 46 78 49 88 4e 03 80 cb a9 a0 5d 76 7d 47 cf de 7d a2 00 7b 4c 06 75 3c a8 aa ab 11 d6 eb ff 11 f2 a8 fe 1e 7b b6 25 dc 20 6a 0e f3 2a 90 81 2b 8a c8 9b b4 07 92 78 42 d7 a7 10 38 c4 e9 c0 ea ff 6c 82 4c b6 0b ba 8d 39 db 53 1e 6c 5b c1 d0 96 d8 1c 73 08 ef 1b 91 c7 ca 2e e2 fa ad fc 3e a5 e3 32 b0 67 62 fb e7 c2 f9 dd d6 6f e0 6a e1 7d a3 9d 84 06 4d 5b 3f 71 1b 3b 54 4b c2 34 f2 a8 34 7a 7d db f4 07 52 36 02 66 19 ad d7 90 07 90 45 e2 72 5c 6d 02 96 b5 8f c2 1c 4f 47 39 25 59 ec 6d 92 20 5a f3 c5 2f ae 53 82 c6 25 58 2e 63 8d bd 89 91 ea a5 01 74 b2 1f 8f 4d f0 ba b0 09 df ca f8 2e e7 c8 3f 2f b6 69 90 1c 6c 43 7d 48 e8 03 0a 31 0f ba a6 bb 29 8d a9 57 f7 88 83 0e f3 96 70 48 8d 69 9d 35 74 0a 99 d3 2e e0 07 59 3d f4 76 9a e0 d1 9d b6 38 f5 cd bc b7 60 35 ee 49 bb cb 08 83 08 60 5e 2d fd 98 bc 7d 2f 0b ec 0b 95 ea d3 d1 39 83 35 76 f4 03 66 04 16 72 7d 68 af f8 91 47 f9 0f 45 8d 56 81 af df ce 0b 58 da eb 8f b6 98 8f 6b c0 76 ec c3 8b d5 0b 54 22 eb f7 c0 d6 2e 59 02 da 85 bc 44 50 86 b1 f4 09 56 89 3c ac f2 f8 eb f5 b5 c8 2d a8 2b 59 7e dd 7f 75 49 1e 73 4b f1 6f ff b2 1f 82 8c 8d 7e c5 e9 56 6c 6d 27 7f 5a 4d 
       Expected: 38 22 8b 3d 69 37 ba cf 4c d3 65 1d ae f9 c7 c8 81 a8 d2 d4 bf e5 e8 22 2a bc e2 73 6f 70 40 91 64 38 53 f0 75 ec 0d 6d 89 2c 0b 0a 2c fa 1c 19 86 d6 3c c4 96 10 97 63 51 9f 22 2d 66 38 7c 24 2f 77 1b 96 58 db 0a ea 5f 2b f7 b9 e7 06 b2 b9 fc c8 35 56 f3 67 77 98 e4 4a bb 17 ae 6a 48 3b e2 1d a9 24 37 76 cb ea 8f 0d 57 58 ab 4f 67 c3 82 57 aa cd f7 0e 51 cd 2e 4e 9b ac 4a 86 5b ae 26 3c cc 78 ca 7f 81 48 11 fc 26 a5 c4 eb b8 4d 7b 9a 41 5b 7f 6f 01 b5 54 3d d9 be 42 30 46 fd 58 47 1a d6 a4 46 f8 f0 23 70 d4 e7 07 0f 5a ab 6b 4d ec 05 f1 c8 e5 cf 3b c8 28 95 57 19 b5 5c 6c 2f a4 2f a9 c6 3f db d6 eb cf 57 dc 24 93 1a 94 2d e4 21 ac cf 64 03 40 01 d6 95 a5 9a 6e f0 6d 12 48 35 89 e9 a8 4d e4 2a c0 cd fc cd 02 32 f2 b6 d5 2a f3 00 c7 1f 1b e6 6f f6 93 70 ad 18 53 d9 2f eb d0 5e 50 a0 ba 2f ad 3a af 16 60 e8 26 ca 06 d0 0a a6 c8 31 8a 68 3f 33 46 e1 11 c8 4c 32 7d 6e d9 5d e9 b4 ba fd 1f 10 f3 1f 1b 0a 1d d7 77 09 92 76 df ea 46 b6 a4 36 f0 c0 9d b6 66 b8 3f d4 f3 6f 9b 32 a4 56 e3 97 de 4d 29 4c 21 31 d9 45 24 ab dc 55 cc 21 84 9d 57 70 10 d5 50 6f 2e 7f 1e 71 10 d5 c0 54 31 9d ec f5 e3 ab 7f 3c f0 de 1b 40 61 13 8d fc 04 b9 5b 2d 63 62 c6 41 41 ba 3a 71 0b 03 45 fa 65 9c cf 04 8e e1 01 9f 01 c6 98 4e 65 00 c6 bc fb c9 4b 0e 99 2e 1c 64 98 70 1b ad 09 ca 87 22 60 84 1d 10 4b c4 e6 ad 00 e3 f6 20 c3 6b e9 a2 15 ff 80 27 5d 9c a5 22 3f 37 23 cb ad e2 61 f3 7d ab 3e 5c ce b7 08 16 01 37 b7 f6 4d 1e 77 21 05 41 b2 ad 7d 43 1e 3b c9 aa 4a c0 e6 73 21 d0 a9 07 8a ba 2d ec c2 2a c9 f4 be 5a 25 13 28 76 4d e5 be 16 57 f0 cf f4 47 cb 60 a1 85 b6 07 40 6a 93 ad a7 c6 b3 5e 90 13 f5 87 f9 17 27 3b b0 c0 2a 7f cc f3 2b bf c7 01 67 53 9f 9a b8 54 b8 b5 40 92 ed 63 df ae c0 f3 50 97 09 c2 bc e4 d0 85 83 4a e1 7c a1 ed 1c 12 5a ac 47 53 81 70 af 1c 04 31 08 b9 1d e7 6a dc aa b2 1d 52 81 87 ae b0 a0 37 2b ed 33 09 8c 00 ad fe 3a 61 31 00 68 f1 4d fc 00 f4 e7 37 54 39 23 77 a1 1d a3 a6 d1 a8 48 38 fc 75 a1 52 b1 9a 73 c9 28 a1 46 78 49 88 4e 03 80 cb a9 a0 5d 76 7d 47 cf de 7d a2 00 7b 4c 06 75 3c a8 aa ab 11 d6 eb ff 11 f2 a8 fe 1e 7b b6 25 dc 20 6a 0e f3 2a 90 81 2b 8a c8 9b b4 07 92 78 42 d7 a7 10 38 c4 e9 c0 ea ff 6c 82 4c b6 0b ba 8d 39 db 53 1e 6c 5b c1 d0 96 d8 1c 73 08 ef 1b 91 c7 ca 2e e2 fa ad fc 3e a5 e3 32 b0 67 62 fb e7 c2 f9 dd d6 6f e0 6a e1 7d a3 9d 84 06 4d 5b 3f 71 1b 3b 54 4b c2 34 f2 a8 34 7a 7d db f4 07 52 36 02 66 19 ad d7 90 07 90 45 e2 72 5c 6d 02 96 b5 8f c2 1c 4f 47 39 25 59 ec 6d 92 20 5a f3 c5 2f ae 53 82 c6 25 58 2e 63 8d bd 89 91 ea a5 01 74 b2 1f 8f 4d f0 ba b0 09 df ca f8 2e e7 c8 3f 2f b6 69 90 1c 6c 43 7d 48 e8 03 0a 31 0f ba a6 bb 29 8d a9 57 f7 88 83 0e f3 96 70 48 8d 69 9d 35 74 0a 99 d3 2e e0 07 59 3d f4 76 9a e0 d1 9d b6 38 f5 cd bc b7 60 35 ee 49 bb cb 08 83 08 60 5e 2d fd 98 bc 7d 2f 0b ec 0b 95 ea d3 d1 39 83 35 76 f4 03 66 04 16 72 7d 68 af f8 91 47 f9 0f 45 8d 56 81 af df ce 0b 58 da eb 8f b6 98 8f 6b c0 76 ec c3 8b d5 0b 54 22 eb f7 c0 d6 2e 59 02 da 85 bc 44 50 86 b1 f4 09 56 89 3c ac f2 f8 eb f5 b5 c8 2d a8 2b 59 7e dd 7f 75 49 1e 73 4b f1 6f ff b2 1f 82 8c 8d 7e c5 e9 56 6c 6d 27 7f 5a 4d 
test_hash T10: passed

Test11: block_size = 128, Input is from file a_tale_of_two_cities.txt
       Computed: 35 0d 6d 5b 95 ba 83 92 a0 32 df 10 d3 28 ae fe 0c 31 70 00 38 eb 81 80 e5 92 dc de e5 2d 54 89 80 73 a3 a0 e8 15 c9 8d ef 07 61 f3 fc 38 63 e9 f1 2a a4 38 fe 90 a2 20 be 5e 8c d2 eb 75 5d 90 0e 3d d9 02 41 8f 5e b4 64 75 ce 98 28 10 cf 89 4e 2e 1f 8f cf db 89 86 fe 73 19 6b cb 5f 7a e7 9e bc 60 6c 65 39 37 46 e5 1a 77 73 51 14 d4 c9 88 c6 2f d0 94 b2 57 90 41 cc 8b bf 8e c4 4f 0f 
       Expected: 35 0d 6d 5b 95 ba 83 92 a0 32 df 10 d3 28 ae fe 0c 31 70 00 38 eb 81 80 e5 92 dc de e5 2d 54 89 80 73 a3 a0 e8 15 c9 8d ef 07 61 f3 fc 38 63 e9 f1 2a a4 38 fe 90 a2 20 be 5e 8c d2 eb 75 5d 90 0e 3d d9 02 41 8f 5e b4 64 75 ce 98 28 10 cf 89 4e 2e 1f 8f cf db 89 86 fe 73 19 6b cb 5f 7a e7 9e bc 60 6c 65 39 37 46 e5 1a 77 73 51 14 d4 c9 88 c6 2f d0 94 b2 57 90 41 cc 8b bf 8e c4 4f 0f 
test_hash T11: passed


===== Testing hash checks =====
Test1: Two hashes match ...
check_hash T1: passed
Test2: Two hashes match in first block_size bytes, hash2 has additional bytes ...
check_hash T2: passed
Test3: Two hashes don't match in first element ...
check_hash T3: passed
Test4: Two hashes don't match in last element ...
check_hash T4: passed
5
5
0
4


Printing a summary of the auto-testing procedure ...
===== Testing compilation and error messages =====
part1 T1: passed
part1 T2: passed
part1 T3: passed
part1 T4: passed
part1 T5: passed
===== Testing hash computation =====
test_hash T01: passed
test_hash T02: passed
test_hash T03: passed
test_hash T04: passed
test_hash T05: passed
test_hash T06: passed
test_hash T07: passed
test_hash T08: passed
test_hash T09: passed
test_hash T10: passed
test_hash T11: passed
===== Testing hash checks =====
check_hash T1: passed
check_hash T2: passed
check_hash T3: passed
check_hash T4: passed

Calculating the final score ...
part1 (out of 5): 5
test_hash (out of 10): 10
check_hash (out of 5): 5

Final score: 20/20
